upstream odoo {
    server odoo:8069;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name recovery.odooforoffice.online 44.199.161.131;
    return 301 https://$server_name$request_uri;
}

# HTTPS Server
server {
    listen 443 ssl;
    server_name recovery.odooforoffice.online;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/recovery.odooforoffice.online/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/recovery.odooforoffice.online/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Logging
    access_log /var/log/nginx/recovery.access.log;
    error_log /var/log/nginx/recovery.error.log;

    # Increase file upload limit
    client_max_body_size 500M;

    # Main location block
    location / {
        proxy_pass http://odoo;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 600s;
    }

    # Cache static files
    location /web/static/ {
        proxy_cache_valid 200 90m;
        proxy_buffering on;
        expires 864000;
        proxy_pass http://odoo;
    }

    # Gzip compression
    gzip on;
    gzip_min_length 1000;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/xml text/css text/javascript application/json application/javascript application/x-javascript application/xml;
}

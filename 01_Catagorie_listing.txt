@admin_required
def category_list(request):
    queryset = Category.objects.filter(deleted_at__isnull=True)
    
    search_query = request.GET.get('search', '')
    if search_query:
        queryset = queryset.filter(
            Q(name__icontains=search_query) | 
            Q(slug__icontains=search_query)
        )
    
    sort_by = request.GET.get('sort', 'name')
    order = request.GET.get('order', 'asc')
    
    valid_sort_fields = ['name', 'created_at', 'style']
    if sort_by not in valid_sort_fields:
        sort_by = 'name'
    
    if order == 'desc':
        queryset = queryset.order_by(f'-{sort_by}')
    else:
        queryset = queryset.order_by(sort_by)

    page = request.GET.get('page', 1)
    per_page = 100
    paginator = Paginator(queryset, per_page)
    
    try:
        category_list = paginator.page(page)
    except PageNotAnInteger:
        category_list = paginator.page(1)
    except EmptyPage:
        category_list = paginator.page(paginator.num_pages)
    
    context = {
        'category_list': category_list,
        'search_query': search_query,
        'sort_by': sort_by,
        'order': order,
        'total_categories': queryset.count(),
        'per_page': per_page
    }
    
    return render(request, 'category_list.html', context)